{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "hcUsername":{
      "type":"string",
      "metadata":{
        "description":"Username for the Ansible Control Virtual Machine and provisoning"
      },
      "defaultValue":"pr35745h0p"
    },
    "sshKeyData":{
      "type":"string",
      "defaultValue":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4pucOaPkE1/U+TmarD0+0OfBt7zHa0vC+PJlJD0ka59UIm2kzsvFZlIDyHMils/1f4lgvVX/R7jXT8pTXRj79T7u4jyq2o2JAtx2FNuawJyD6GBRzburuwJkdCEYnJWEiiARS6ivnvZUVrHtGd+c29xNuDb6IqYVWkeMGf4RQ3S5M+jG+W3Yf8XK7OcipNYJtExbKY5/M1AykNSggxuwsd443uyr+bCWB2g+YV1HnuUS+DxptZMh5tFT3rQyzshKMjWvZY64aAh+54Yok8aQhWsKFAw1s9ZhxJ9cTg5X4eUgiPP2LYX7MxTagyFdlqd8MbKYQF0qhzgCy2TfH/GhV hleclerc@machl.home",
      "metadata":{
        "description":"Public key for SSH authentication"
      }
    },
    "ubuntuOSVersion":{
      "type":"string",
      "defaultValue":"16.04.0-LTS",
      "allowedValues":[
        "16.04.0-LTS",
        "14.04.4-LTS"
      ],
      "metadata":{
        "description":"The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values:14.04.4-LTS, 16.04.0-LTS ."
      }
    },
    "frVmSize":{
      "type":"string",
      "defaultValue":"Standard_A0",
      "allowedValues":[
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata":{
        "description":"Instance size for Web Front VMs"
      }
    },
    "numberOfFront":{
      "type":"int",
      "defaultValue":2,
      "metadata":{
        "description":"Number of Front nodes to create >=2"
      }
    },
    "backVmSize":{
      "type":"string",
      "defaultValue":"Standard_A0",
      "allowedValues":[
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata":{
        "description":"Instance size for Web Front VMs Minimum Standard_A0"
      }
    },
    "numberOfBack":{
      "type":"int",
      "defaultValue":2,
      "metadata":{
        "description":"Number of Back nodes to create >=2"
      }
    }
  },
  "variables":{
    "templatesBaseURL":"https://raw.githubusercontent.com/herveleclerc/arm-lamp/master/nested/",
    "configuration":{
      "frontTemplateURL":"[concat(variables('templatesBaseURL'),'/front.json')]",
      "backTemplateURL":"[concat(variables('templatesBaseURL'),'/back.json')]"
    },
    "frFaultDomainCount":"3",
    "frUpdateDomainCount":"5",
    "dnsNameForAnsiblePublicIP":"[concat('hc00', resourceGroup().name)]",
    "dnsserver":"8.8.8.8",
    "location":"[resourceGroup().location]",
    "imagePublisher":"Canonical",
    "imageOffer":"UbuntuServer",
    "hcOSDiskName":"hcosdisk",
    "keyStorageAccountName":"[concat('key', resourceGroup().name)]",
    "keyStorageAccountType":"Standard_LRS",
    "hcNicName":"hcVnic",
    "virtualNetworkName":"[concat('vNet', resourceGroup().name)]",
    "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "addressPrefix":"10.0.0.0/16",
    "subnetCIDR":".0/24",
    "hcSubnetRoot":"10.0.0",
    "frSubnetRoot":"10.0.2",
    "bkSubnetRoot":"10.0.4",
    "hcSubnetName":"hcSubnet",
    "hcSubnetPrefix":"[concat(variables('hcSubnetRoot'),variables('subnetCIDR'))]",
    "frSubnetName":"frSubnet",
    "frSubnetPrefix":"[concat(variables('frSubnetRoot'),variables('subnetCIDR'))]",
    "bkSubnetName":"bkSubnet",
    "bkSubnetPrefix":"[concat(variables('bkSubnetRoot'),variables('subnetCIDR'))]",
    "assetsStorageAccountId":"[resourceId(variables('keyStorageAccountName'),'Microsoft.Storage/storageAccounts', variables('keyStorageAccountName'))]",
    "hcStorageAccountName":"[concat('hc', resourceGroup().name)]",
    "hcStorageAccountType":"Standard_LRS",
    "frStorageAccountName":"[concat('fr', resourceGroup().name)]",
    "frStorageAccountType":"Standard_LRS",
    "bkStorageAccountName":"[concat('bk', resourceGroup().name)]",
    "bkStorageAccountType":"Standard_LRS",
    "frAvailabilitySetName":"[concat('frav', resourceGroup().name)]",
    "bkAvailabilitySetName":"[concat('bkav', resourceGroup().name)]",
    "hcPublicIPAddressName":"hcPublicIP",
    "hcPublicIPAddressType":"Dynamic",
    "hcVmStorageAccountContainerName":"vhds",
    "hcVmName":"[concat('ans', resourceGroup().name)]",
    "frVmName":"[concat('web', resourceGroup().name)]",
    "bkVmName":"[concat('bdd', resourceGroup().name)]",
    "hcSubnetRef":"[concat(variables('vnetID'),'/subnets/',variables('hcSubnetName'))]",
    "hcVmSize":"Basic_A0",
    "hcNetworkSecurityGroupName":"hcSecurityGroup",
    "frNetworkSecurityGroupName":"frSecurityGroup",
    "bkNetworkSecurityGroupName":"bkSecurityGroup",
    "sshKeyPath":"[concat('/home/',parameters('hcUsername'),'/.ssh/authorized_keys')]",
    "scriptsBaseUrl":"https://raw.githubusercontent.com/herveleclerc/arm-lamp/master/scripts/",
    "ansiblePlaybookLocation":"deploy-prestashop.yml",
    "customScriptDeployFile":"deploy.sh",
    "customScriptDeployUrl":"[concat(variables('scriptsBaseUrl'),variables('customScriptDeployFile'))]",
    "customScriptAnsibleCommand":"[concat('bash ',variables('customScriptDeployFile'))]",
    "ansiblePlaybookUrl":"[concat(variables('scriptsBaseUrl'),variables('ansiblePlaybookLocation'))]",
    "pythonAzureScriptUrl":"[concat(variables('scriptsBaseUrl'),'WriteSSHToPrivateStorage.py')]",
    "paramsSubnets":"[concat(variables('hcSubnetRoot'),' ',variables('frSubnetRoot'),' ',variables('bkSubnetRoot'),' ')]",
    "paramsNbHosts":"[concat(parameters('numberOfFront'),' ',parameters('numberOfBack'))]",
    "paramsNames":"[concat(variables('hcVmName'),' ',variables('frVmName'),' ',variables('bkVmName'))]",
    "paramsDeploy":"[concat(parameters('hcUsername'),' ',variables('paramsSubnets'),' ',variables('paramsNbHosts'),' ',variables('paramsNames'))]",
    "apiVersion":{
      "resources":{
        "deployments":"2015-01-01"
      },
      "network":"2015-05-01-preview",
      "storage":"2015-05-01-preview",
      "compute":"2015-06-15",
      "deployment":"2016-02-01"
    }
  },
  "resources":[
    {
      "name":"FrontDeployment",
      "type":"Microsoft.Resources/deployments",
      "apiVersion":"[variables('apiVersion').deployment]",
      "dependsOn":[
        "[concat('Microsoft.Storage/storageAccounts/', toLower(variables('keyStorageAccountName')))]",
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('frNetworkSecurityGroupName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('hcVmName'),'/extensions/installAnsible')]"
      ],
      "properties":{
        "mode":"Incremental",
        "templateLink":{
          "uri":"[variables('configuration').frontTemplateURL]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "adminUserName":{
            "value":"[parameters('hcUsername')]"
          },
          "sshKeyData":{
            "value":"[parameters('sshKeyData')]"
          },
          "ubuntuOSVersion":{
            "value":"[parameters('ubuntuOSVersion')]"
          },
          "frVmSize":{
            "value":"[parameters('frVmSize')]"
          },
          "numberOfFront":{
            "value":"[parameters('numberOfFront')]"
          },
          "frAvailabilitySetName":{
            "value":"[variables('frAvailabilitySetName')]"
          },
          "frStorageAccountName":{
            "value":"[variables('frStorageAccountName')]"
          },
          "frStorageAccountType":{
            "value":"[variables('frStorageAccountType')]"
          },
          "subnetCIDR":{
            "value":"[variables('subnetCIDR')]"
          },
          "frSubnetRoot":{
            "value":"[variables('frSubnetRoot')]"
          },
          "frSubnetName":{
            "value":"[variables('frSubnetName')]"
          },
          "frSubnetPrefix":{
            "value":"[variables('frSubnetPrefix')]"
          },
          "vnetID":{
            "value":"[variables('vnetID')]"
          },
          "frVmName":{
            "value":"[variables('frVmName')]"
          }
        }
      }
    },
    {
      "comments":"Availability Set for Front VMs",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('frAvailabilitySetName')]",
      "apiVersion": "[variables('apiVersion').network]",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformFaultDomainCount": "[variables('frFaultDomainCount')]",
        "PlatformUpdateDomainCount": "[variables('frUpdateDomainCount')]"
      }
    },
    {
      "comments":"Network Security Group for Ansible Control VM",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/networkSecurityGroups",
      "name":"[variables('hcNetworkSecurityGroupName')]",
      "location":"[variables('location')]",
      "tags":{
        "displayName":"ANSIBLE-NetworkSecurityGroup"
      },
      "properties":{
        "securityRules":[
          {
            "name":"openbar-in",
            "properties":{
              "protocol":"*",
              "sourcePortRange":"*",
              "destinationPortRange":"*",
              "sourceAddressPrefix":"*",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "priority":101,
              "direction":"Inbound"
            }
          }
        ]
      }
    },
    {
      "comments":"Network Security Group for front VMs",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/networkSecurityGroups",
      "name":"[variables('frNetworkSecurityGroupName')]",
      "location":"[variables('location')]",
      "tags":{
        "displayName":"FRONT-NetworkSecurityGroup"
      },
      "properties":{
        "securityRules":[
          {
            "name":"http80-in",
            "properties":{
              "protocol":"*",
              "sourcePortRange":"*",
              "destinationPortRange":"*",
              "sourceAddressPrefix":"*",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "priority":101,
              "direction":"Inbound"
            }
          }
        ]
      }
    },
    {
      "comments":"Network Security Group for front VMs",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/networkSecurityGroups",
      "name":"[variables('bkNetworkSecurityGroupName')]",
      "location":"[variables('location')]",
      "tags":{
        "displayName":"BACK-NetworkSecurityGroup"
      },
      "properties":{
        "securityRules":[
          {
            "name":"acc-in",
            "properties":{
              "protocol":"*",
              "sourcePortRange":"*",
              "destinationPortRange":"*",
              "sourceAddressPrefix":"*",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "priority":101,
              "direction":"Inbound"
            }
          }
        ]
      }
    },
    {
      "comments":"Global Storage Account for the Stack",
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[toLower(variables('hcStorageAccountName'))]",
      "apiVersion":"[variables('apiVersion').storage]",
      "location":"[variables('location')]",
      "properties":{
        "accountType":"[variables('hcStorageAccountType')]"
      }
    },
    {
      "comments":"Storage Account for Generated SSH keys or secrets",
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[toLower(variables('keyStorageAccountName'))]",
      "apiVersion":"[variables('apiVersion').storage]",
      "location":"[variables('location')]",
      "properties":{
        "accountType":"[variables('keyStorageAccountType')]"
      }
    },
    {
      "comments":"Public IP for Ansible Control VM",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[variables('hcPublicIPAddressName')]",
      "location":"[variables('location')]",
      "properties":{
        "publicIPAllocationMethod":"[variables('hcPublicIPAddressType')]",
        "dnsSettings":{
          "domainNameLabel":"[variables('dnsNameForAnsiblePublicIP')]"
        }
      }
    },
    {
      "comments":"Virtual Network with 3 subnets admin, front, back",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/virtualNetworks",
      "name":"[variables('virtualNetworkName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('hcNetworkSecurityGroupName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('frNetworkSecurityGroupName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('bkNetworkSecurityGroupName'))]"
      ],
      "properties":{
        "addressSpace":{
          "addressPrefixes":[
            "[variables('addressPrefix')]"
          ]
        },
        "subnets":[
          {
            "name":"[variables('hcSubnetName')]",
            "properties":{
              "addressPrefix":"[variables('hcSubnetPrefix')]",
              "networkSecurityGroup":{
                "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('hcNetworkSecurityGroupName'))]"
              }
            }
          },
          {
            "name":"[variables('frSubnetName')]",
            "properties":{
              "addressPrefix":"[variables('frSubnetPrefix')]",
              "networkSecurityGroup":{
                "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('frNetworkSecurityGroupName'))]"
              }
            }
          },
          {
            "name":"[variables('bkSubnetName')]",
            "properties":{
              "addressPrefix":"[variables('bkSubnetPrefix')]",
              "networkSecurityGroup":{
                "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('bkNetworkSecurityGroupName'))]"
              }
            }
          }
        ],
        "dhcpOptions":{
          "dnsServers":[
            "[variables('dnsserver')]"
          ]
        }
      }
    },
    {
      "comments":"Interface for Ansible Control VM with a public IP attached",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/networkInterfaces",
      "name":"[variables('hcNicName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Network/publicIPAddresses/', variables('hcPublicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties":{
        "dnsSettings":{
          "dnsServers":[
            "[variables('dnsserver')]"
          ]
        },
        "ipConfigurations":[
          {
            "name":"ipconfig1",
            "properties":{
              "privateIPAllocationMethod":"Dynamic",
              "publicIPAddress":{
                "id":"[resourceId('Microsoft.Network/publicIPAddresses',variables('hcPublicIPAddressName'))]"
              },
              "subnet":{
                "id":"[variables('hcSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments":"Custom script extension for the Ansible Control VM",
      "type":"Microsoft.Compute/virtualMachines/extensions",
      "name":"[concat(variables('hcVmName'),'/installAnsible')]",
      "apiVersion":"[variables('apiVersion').compute]",
      "location":"[resourceGroup().location]",
      "dependsOn":[
        "[concat('Microsoft.Compute/virtualMachines/', variables('hcVmName'))]"
      ],
      "properties":{
        "publisher":"Microsoft.OSTCExtensions",
        "type":"CustomScriptForLinux",
        "typeHandlerVersion":"1.4",
        "settings":{
          "fileUris":[
            "[variables('customScriptDeployUrl')]",
            "[variables('ansiblePlaybookUrl')]",
            "[variables('pythonAzureScriptUrl')]"
          ],
          "commandToExecute":"[concat(variables('customScriptAnsibleCommand'),' ', variables('keyStorageAccountName'),' ',listKeys(concat('Microsoft.Storage/storageAccounts/', variables('keyStorageAccountName')), '2015-05-01-preview').key1,' ',variables('paramsDeploy'))]",
          "protectedSettings":{

          }
        }
      }
    },
    {
      "comments":"Ansible Contol VM plays the playbook to provision the LAMP cluster",
      "apiVersion":"[variables('apiVersion').compute]",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[variables('hcVmName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Storage/storageAccounts/', toLower(variables('hcStorageAccountName')) ) ]",
        "[concat('Microsoft.Storage/storageAccounts/', toLower(variables('keyStorageAccountName')) )]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('hcNicName'))]"
      ],
      "properties":{
        "hardwareProfile":{
          "vmSize":"[variables('hcVmSize')]"
        },
        "osProfile":{
          "computerName":"[variables('hcVmName')]",
          "adminUsername":"[parameters('hcUsername')]",
          "linuxConfiguration":{
            "disablePasswordAuthentication":"true",
            "ssh":{
              "publicKeys":[
                {
                  "path":"[variables('sshKeyPath')]",
                  "keyData":"[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile":{
          "imageReference":{
            "publisher":"[variables('imagePublisher')]",
            "offer":"[variables('imageOffer')]",
            "sku":"[parameters('ubuntuOSVersion')]",
            "version":"latest"
          },
          "osDisk":{
            "name":"osdisk",
            "vhd":{
              "uri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('hcStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('hcVmStorageAccountContainerName'),'/', variables('hcOSDiskName'), '.vhd')]"
            },
            "caching":"ReadWrite",
            "createOption":"FromImage"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('hcNicName'))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled":"true",
            "storageUri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('hcStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob)]"
          }
        }
      }
    }
  ]
}