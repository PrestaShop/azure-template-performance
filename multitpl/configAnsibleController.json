{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "Schema api version from parent template"
      }
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix of the components"
      }
    },
    "ansibleNicName": {
      "type": "string",
      "metadata": {
        "description": "ansible NicName"
      }
    },
    "ansibleStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "ansible StorageAccount Name"
      }
    },
    "subnetAdminRef": {
      "type": "string",
      "metadata": {
        "description": "subnet Admin"
      }
    },
    "ansibleVmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the Ansible virtual machine"
      }
    },
    "subnetAdminPrefix": {
      "type": "string",
      "metadata": {
        "description": "subnet Admin Prefix"
      }
    },
    "ansibleIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "ansible IP Address Name"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Username for login to the VMs"
      }
    },
    "adminPassword": {
      "type": "string",
      "metadata": {
        "description": "Password for login to the VMs"
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Public key for SSH authentication"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Allowed values are: 7.0, 7.1, 7.2"
      }
    }
  },
  "variables": {
    "ansibleIPAddressName": "[concat(parameters('prefix'),'-pip-ansible')]",
    "ansibleVmName": "[concat(parameters('prefix'),'-ansible')]",
    "ansibleOsDiskName": "[concat(parameters('prefix'),'-ansible-os')]",
    "nicPIPAddressType": "Dynamic",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
    "imageReference": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('ubuntuOSVersion')]",
      "version": "latest"
    },
    "ansibleIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('ansibleIPAddressName'))]",
    
    "adminPassword": "v3l0c1r4p70r#",
    "disablePasswordAuthentication": "true"
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('ansibleNicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ansibleIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ansibleIPAddressName'))]"
              },
              "subnet": {
                "id": "[parameters('subnetAdminRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('ansibleVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',parameters('ansibleNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('ansibleVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('ansibleVmName')]",
          "adminUserName": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('ansibleStorageAccountName'), '.blob.core.windows.net/vhds/', variables('ansibleOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('ansibleNicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('ansibleVMName'),'/ansible')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/',concat(variables('ansibleVmName')))]",
        "[concat('Microsoft.Network/networkInterfaces/',parameters('ansibleNicName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[variables('scriptBlobUrl')]",
            "[variables('keysBlobUrl')]",
            "[variables('pubBlobUrl')]",
            "[variables('tokenBlobUrl')]"
          ],
          "commandToExecute": "[concat('bash deploy.sh ',parameters('numberOfMasters'), ' ',parameters('numberOfMinions'), ' ',parameters('numberOfEtcdNodes'), ' ', parameters('subnetMastersPrefix'), ' ', parameters('subnetMinionsPrefix'), ' ',parameters('subnetEtcdPrefix'), ' ',parameters('prefix'), ' ', ' ', reference(variables('ansibleIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn,' ', parameters('adminUserName'), ' ', reference(variables('kubemastersLbPIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn,' >/tmp/deploy.log 2>&1 &')]",
          "timestamp": "variables('ansibleIPAddressID')"
        },
        "protectedSettings": {
          "storageAccountName": "[parameters('vaultAccountName')]",
          "storageAccountKey": "[listKeys(variables('assetsStorageAccountId'),'2015-05-01-preview').key1]"
        }
      }
    }
  ],
  "outputs": {
    "result": {
      "value": "Configuration Ansible Controller Provisioning achieved",
      "type": "string"
    }
  }
}